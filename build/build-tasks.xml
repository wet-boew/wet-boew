<?xml version="1.0" encoding="UTF-8"?>
<project name="build-tasks" default="default" basedir=".">
	<dirname property="tasks.basedir" file="${ant.file.build-tasks}"/>
	<property file="${tasks.basedir}/build-tasks.properties"/>
	
	<!-- Version and build time-->
	<property name="wet-boew-build.version" value="v3.0.2-a1"/>
	<tstamp>
		<format property="wet-boew-build.starttime" pattern="yyyy-MM-dd hh:mm aa" locale="en,CA"/>
	</tstamp>
	
	<!-- ant contribs task definition  -->
	<path id="antcontrib.classpath">
		<pathelement location="${antcontribs.jar}" />
	</path> 
	<taskdef resource="net/sf/antcontrib/antlib.xml">
		<classpath refid="antcontrib.classpath" />
	</taskdef>
	
	<target name="-init" depends="-build-jruby">
		<mkdir dir="${build.dir}"/>
	</target>
	
	<!-- yui-compressor task definition  -->
	<path id="yui.classpath">
		<pathelement location="${yui-compressor.jar}" />
		<pathelement location="${yui-compressor-ant-task.jar}" />
	</path>
	<taskdef name="yui-compressor" classname="net.noha.tools.ant.yuicompressor.tasks.YuiCompressorTask">
		<classpath refid="yui.classpath" />
	</taskdef>
	<!-- css embed Base64Encode images task definition -->
	<path id="cssurlembed.classpath">
		<pathelement location="${cssurlembed.jar}" />
	</path>
	<taskdef name="cssurlembed" classname="net.nczonline.web.cssembed.CSSEmbedTask">
		<classpath refid="cssurlembed.classpath" />
	</taskdef>
	
	<!-- JSHint Ant task definition -->
	<path id="jshint.classpath">
		<pathelement location="${jshint.jar}" />
	</path>
	<taskdef name="jshint" classname="com.philmander.jshint.JsHintAntTask">
		<classpath refid="jshint.classpath" />
	</taskdef>
	
	<!-- Include the compiled jruby.jar file -->
	<path id="jruby.classpath">
		<fileset dir="${lib.dir}">
			<include name="${jruby.jar}"/>
		</fileset>
	</path>	

	<!-- Include jruby + gems (compass + sass) -->
	<target name="-build-jruby" depends="-jruby.jar.check" unless="jruby.jar.exists">
		<mkdir dir="${lib.dir}/jruby-compiled" />
		<delete dir="${lib.dir}/vendors-${jruby.depends}" />
		<get src="http://jruby.org.s3.amazonaws.com/downloads/${jruby.version}/jruby-complete-${jruby.version}.jar" dest="${lib.dir}/jruby-complete-${jruby.version}.jar" skipexisting="true"/>
		<get src="http://production.cf.rubygems.org/gems/${sass.gem}" dest="${gem.dir}/${sass.gem}" skipexisting="true"/>
		<get src="http://production.cf.rubygems.org/gems/${chunky_png.gem}" dest="${gem.dir}/${chunky_png.gem}" skipexisting="true"/>
		<get src="http://production.cf.rubygems.org/gems/${fssm.gem}" dest="${gem.dir}/${fssm.gem}" skipexisting="true"/>
		<get src="http://production.cf.rubygems.org/gems/${compass.gem}" dest="${gem.dir}/${compass.gem}" skipexisting="true"/>
		<java jar="${lib.dir}/jruby-complete-${jruby.version}.jar" fork="true">
			<arg line="-S gem install -i &quot;${lib.dir}/vendors-${jruby.depends}&quot; &quot;${gem.dir}/${sass.gem}&quot; &quot;${gem.dir}/${chunky_png.gem}&quot; &quot;${gem.dir}/${fssm.gem}&quot; &quot;${gem.dir}/${compass.gem}&quot;"/>
		</java>
		<exec executable="jar" dir="${lib.dir}/">
			<arg line="-uf jruby-complete-${jruby.version}.jar -C vendors-${jruby.depends} ." />
		</exec>
		<move file="${lib.dir}/jruby-complete-${jruby.version}.jar" tofile="${lib.dir}/${jruby.jar}"/>
		<delete dir="${gem.dir}" />
	</target>

	<target name="-jruby.jar.check">
		<checksum file="${tasks.basedir}/build-tasks.properties" property="jruby.depends"/>
		<property name="jruby.jar" value="jruby-${jruby.depends}.jar" />
		<condition property="jruby.jar.exists">
			<available file="${lib.dir}/${jruby.jar}" type="file"/>
		</condition>
	</target>
	
	<!-- Compile all of the SCSS files into their CSS counterparts "ant compile.sass" -->
	<target name="compile.sass">
		<antcall target="call.sass">
			<param name="command" value="compile"/>
		</antcall>
		<echo level="info" message="---Converted CSS SCSS Files into CSS---"/>
	</target>
	
	<target name="call.sass">
		<java classname="org.jruby.Main" fork="true" failonerror="true" classpathref="jruby.classpath">
			<arg path="${tasks.basedir}/compile.rb"/>
			<arg path="${lib.dir}/vendors-${jruby.depends}/gems/"/>
			<arg value="${command}"/>
			<arg path="${src.dir}"/>
		</java>
	</target>
	
	<!-- Watch for any polling changes in the SCSS directory "ant watch.sass" -->
	<target name="watch.sass">
		<antcall target="call.sass">
			<param name="command" value="watch"/>
		</antcall>
		<echo level="info" message="---Watching for SCSS Changes in CSS Directory---"/>
	</target>
	
	<target name="-jshint">
		<jshint dir="${src.dir}" fail="${jshint.failbuild}" globalsFile="${jshint.globals.file}">
			<report type="xml" destfile="${build.dir}/jshint.out.xml" />
			<include name="**/*.js"/>
			<exclude name="**/*.min.js"/>
		</jshint>
	</target>
		
	<target name="build-theme-deps" description="Initializes the Grid, JS and Base CSS projects so that the Sass has been compiled">
		<if>
			<available type="dir" file="${gridsrc.dir}/css"/>
			<then />
			<else>
				<ant dir="${gridsrc.dir}" target="compile.sass" inheritAll="false"/>
			</else>
		</if>		
		<if>
			<available type="dir" file="${basesrc.dir}/css"/>
			<then />
			<else>
				<ant dir="${basesrc.dir}" target="compile.sass" inheritAll="false"/>
			</else>
		</if>		
		<if>
			<available type="dir" file="${jssrc.dir}/css"/>
			<then />
			<else>
				<ant dir="${jssrc.dir}" target="compile.sass" inheritAll="false"/>
			</else>
		</if>
	</target>
	
	<target name="clean-theme-deps" description="Clean the Grid, JS and Base CSS files. Used for after building an individual theme">
		<ant dir="${gridsrc.dir}" target="clean-css" inheritAll="false"/>
		<ant dir="${basesrc.dir}" target="clean-css" inheritAll="false"/>
		<ant dir="${jssrc.dir}" target="clean-css" inheritAll="false"/>
		<antcall target="clean-css" inheritAll="false"/>
	</target>
	
	<target name="clean-css">
		<delete dir="${src.dir}/css" />
	</target>
  
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>
</project>