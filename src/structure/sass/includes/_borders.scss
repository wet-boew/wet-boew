/*
 * BORDERS SCSS
 * - Decorative OOCSS Extending CSS for Border treatment of elements
 */

$border : 1 !default;
$radius: 6 !default;
$border-color: #999 !default;
$border-accent: #00556b !default;

$border-width-thick: floor($border*1.618*1.618) + px;
$border-width-xthick: floor($border*1.618*1.618*1.618*1.618) + px;

$border-radius-sharp: floor($radius*1.618) + px;
$border-radius-sharper: floor($radius*1.618*1.618) + px;
$border-radius-loose: floor($radius*.618) + px;
$border-radius-looser: floor($radius*.618*.618) + px;

$border-color-light: lighten($border-color, 20%);
$border-color-dark : darken($border-color, 20%);
$border-accent-light: lighten($border-accent, 20%);
$border-accent-dark: lighten($border-accent, 20%);

// Set the defaults around border with low specificity and no background color


@function border-return($context){
  @if $context == '-light' { @return $border-color-light }
  @else if $context == '-dark' { @return $border-color-dark }
  @else if $context == '-large' { @return $border-width-thick }
  @else if $context == '-xlarge' { @return $border-width-xthick }

  @else if $context == '-loose' { @return $border-radius-loose }
  @else if $context == '-looser' { @return $border-radius-looser }
  @else if $context == '-sharp' { @return $border-radius-sharp }
  @else if $context == '-sharper' { @return $border-radius-sharper }

  @else if $context == '-dashed' { @return dashed }
  @else if $context == '-double' { @return double }
  @else if $context == '-none' { @return 0px }
  @else { @return $border + px }
}

@function property-return($context, $part){
  @if $context == '-light' { @return #{$part}-color }
  @else if $context == '-dark' { @return #{$part}-color }
  @else if $context == '-large' { @return #{$part}-width }

  @else if $context == '-loose' { @return #{$part}-radius }
  @else if $context == '-looser' { @return #{$part}-radius }
  @else if $context == '-sharp' { @return #{$part}-radius }
  @else if $context == '-sharper' { @return #{$part}-radius }

  @else if $context == '-xlarge' { @return #{$part}-width }
  @else if $context == '-dashed' { @return #{$part}-style }
  @else if $context == '-double' { @return #{$part}-style }
  @else if $context == '-none' { @return #{$part}-width }
  @else { @return #{$part}-width  }
}

$sizes: '','-none','-large','-xlarge';
$sides : '','-left','-right','-top','-bottom';
$shades : '-light', '-dark';
$types : '-dashed', '-double';
$curves : '-loose', '-looser', '-sharp', '-sharper' ;
$all : '','-none','-large','-xlarge', '-light', '-dark', '-dashed', '-double', '-loose', '-looser', '-sharp', '-sharper';

// lets loop through colors
@each $sds in $sides {
	// looping through sides
	@each $sz in $all {
		.border#{$sds}#{$sz} { border#{property-return($sz,$sds)}: border-return($sz)}
	}
}


