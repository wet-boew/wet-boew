<?xml version="1.0" encoding="UTF-8"?>
<project name="theme-gcwu-fegc" default="build" basedir=".">
	<description>WET-BOEW GC Web Usability Theme</description>

	<property file="build.properties"/>
	<import file="build-tasks.xml"/>

	<target name="build" description="" depends="build-jar, -init, -minify" />
  
  <!-- Include jruby + gems (compass + sass + zengrids) -->
  <target name="build-jar" depends="jar.check" unless="jar.exists">
    <mkdir dir="${lib.dir}/jruby-compiled" />
    <get src="http://jruby.org.s3.amazonaws.com/downloads/1.6.7.2/jruby-complete-1.6.7.2.jar" dest="${lib.dir}/jruby.jar"/>
    <get src="http://production.cf.rubygems.org/gems/compass-0.12.1.gem" dest="${lib.dir}/jruby-compiled/compass.gem"/>  
    <get src="http://production.cf.rubygems.org/gems/sass-3.1.19.gem" dest="${lib.dir}/jruby-compiled/sass.gem"/>  
    <get src="http://production.cf.rubygems.org/gems/zen-grids-1.2.gem" dest="${lib.dir}/jruby-compiled/zen-grids.gem"/> 
    <java jar="${lib.dir}/jruby.jar" fork="true">
        <arg line="-S gem install -i ${lib.dir}/vendors ${lib.dir}/jruby-compiled/compass.gem ${lib.dir}/jruby-compiled/sass.gem ${lib.dir}/jruby-compiled/zen-grids.gem"/>
    </java>
    <exec executable="jar" dir="${lib.dir}/">
      <arg line="-uf jruby.jar -C vendors ." />
    </exec>
    <delete dir="${lib.dir}/jruby-compiled" />
  </target>
  <target name="jar.check">
    <condition property="jar.exists">
      <available file="${lib.dir}/jruby.jar" type="file"/>
    </condition>
  </target>
  
	<target name="-init" depends="compile.sass">
		<mkdir dir="${build.dir}"/>
	</target>

	<target name="-minify" depends="build-css">
		<move todir="${build.dir}/css/premin">
			<fileset dir="${build.dir}/css"/>
		</move>
		<yui-compressor warn="false" munge="true" preserveAllSemiColons="false" fromDir="${build.dir}/css/premin" toDir="${build.dir}/css">
			<include name="*.*" />
		</yui-compressor>
		<delete dir="${build.dir}/css/premin"/>
	</target>

	<target name="build-css" depends="-base64-encode" />

  <!-- Compile all of the SCSS files into their CSS counterparts "ant compile.sass" -->
  <target name="compile.sass">
    <java classname="org.jruby.Main" fork="true" failonerror="true" classpathref="jruby.classpath">
        <arg line="${src.dir}/compile.rb ${lib.dir}/vendors/gems/ compile ${src.dir}"/>
    </java>
    <echo level="info">
---Converted GCWU SCSS Files into CSS---
    </echo>
  </target>
  <!-- Watch for any polling changes in the SCSS directory "ant watch.sass" -->
  <target name="watch.sass">
    <java classname="org.jruby.Main" fork="true" failonerror="true" classpathref="jruby.classpath">
        <arg line="${src.dir}/compile.rb ${lib.dir}/vendors/gems/ watch ${src.dir}"/>
    </java>
    <echo level="info">
---Watching for SCSS Changes in GCWU Directory---
    </echo>
  </target>
  
	<!--Build CSS Tasks -->
	<target name="-base64-encode" depends="-merge-css">
		<copy todir="${build.dir}/images">
			<fileset dir="${src.dir}/images"/>
		</copy>
		<copy todir="${build.dir}/encode/images">
			<fileset dir="${src.dir}/images"/>
		</copy>
		<copy todir="${build.dir}/encode/css">
			<fileset dir="${build.dir}/css">
				<include name="theme.css"/>
				<include name="theme-sp-pe.css"/>
				<include name="theme-serv.css"/>
			</fileset>
		</copy>
		<cssurlembed skipMissing="true">
			<fileset dir="${build.dir}/encode/css/">
				<include name="theme.css"/>
				<include name="theme-sp-pe.css"/>
				<include name="theme-serv.css"/>
			</fileset>
		</cssurlembed>
		<copy todir="${build.dir}/css">
			<fileset dir="${build.dir}/encode/css"/>
		</copy>
		<copy todir="${build.dir}/images">
			<fileset dir="${build.dir}/images"/>
		</copy>
		<delete dir="${build.dir}/encode"/>
	</target>
	
	<target name="-merge-css">
		<copy todir="${build.dir}">
			<fileset dir="${src.dir}">
				<exclude name="build*"/>
        <exclude name="config*"/>
        <exclude name="compile*"/>
        <exclude name="sass/**"/>
			</fileset>
		</copy>
		<copy todir="${build.dir}/../css">
			<fileset dir="${src.dir}/../base/css"/>
		</copy>
		<filelist id="corefiles" dir="${build.dir}">
			<file name="css/theme.css"/>
			<file name="css/theme-ie.css"/>
			<file name="css/theme-sp-pe.css"/>
			<file name="css/theme-sp-pe-ie.css"/>
			<file name="css/theme-serv.css"/>
			<file name="css/theme-serv-ie.css"/>
		</filelist>
		<for param="css-file">
			<path>
				<filelist refid="corefiles"/>
			</path>
			<sequential>
				<antcall target="-resolve-css-imports" inheritAll="false">
					<param name="file" value="@{css-file}"/>
					<param name="topfile" value="true"/>
				</antcall>
			</sequential>
		</for>

		<delete>
			<fileset dir="${build.dir}/css">
				<exclude name="theme.css"/>
				<exclude name="theme-ie.css"/>
				<exclude name="theme-sp-pe.css"/>
				<exclude name="theme-sp-pe-ie.css"/>
				<exclude name="theme-serv.css"/>
				<exclude name="theme-serv-ie.css"/>
			</fileset>
		</delete>
		<delete dir="${build.dir}/../css"/>
	</target>

	<target name="-resolve-css-imports">
		<antcall target="-recurse" inheritAll="false">
			<param name="file.recurse" value="${file}"/>
			<param name="topfile" value="${topfile}"/>
		</antcall>
	</target>

	<target name="-recurse">
        <property name="charset_regexp" value="@charset\s*?['&quot;]utf-8['&quot;]\s*?;" />
        <property name="url_regexp" value="url\(\s*?['&quot;]\s*?(.*)?['&quot;]\s*?\s*?\)" />
        <property name="import_regexp" value="@import\s*?${url_regexp}\s*?;?" />
		<fixcrlf file="${file.recurse}"/>
		<!-- Removes the charset directive if not in a core file -->
		<if>
			<not>
				<equals arg1="${topfile}" arg2="true"/>
			</not>
			<then>
                <replaceregexp file="${file.recurse}" match="${charset_regexp}" replace=""/>
			</then>
		</if>

		<loadfile property="src" srcfile="${file.recurse}" encoding="utf8"/>
        <!--Merge imported stylesheets-->
        <for delimiter="${line.separator}" param="currline" list="${src}">
			<sequential>
                <propertyregex regexp="${import_regexp}" property="import" select="\0" input="@{currline}" global="true" casesensitive="true" override="true"/>
				<if>
					<isset property="import"/>
					<then>
                        <propertyregex regexp="${import_regexp}" property="import.file.name" select="\1" input="${import}" casesensitive="true" override="true"/>
						<dirname property="import.file.root" file="${file.recurse}"/>
						<property name="import.file" value="${import.file.root}/${import.file.name}"/>
						<antcall target="-resolve-css-imports" inheritAll="false">
							<param name="file" value="${import.file}"/>
							<param name="topfile" value="false"/>
						</antcall>
						<loadfile property="imported" srcfile="${import.file}"/>
						<replace file="${file.recurse}" token="${import}" value="${imported}"/>
						<var name="import.file.root" unset="true"/>
                        <var name="import.file.name" unset="true"/>
						<var name="import.file" unset="true"/>
						<var name="imported" unset="true"/>
                        <var name="import" unset="true"/>
					</then>
				</if>
			</sequential>
		</for>
		<var name="src" unset="true"/>
        <var name="file.recurse" unset="true"/>
	</target>

  <target name="clean-css">
		<delete dir="${src.dir}/css" />
	</target>
  
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>
</project>