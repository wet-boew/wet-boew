/*
 * Web Experience Toolkit (WET) / Boîte à outils de l'expérience Web (BOEW)
 * wet-boew.github.io/wet-boew/License-eng.txt / wet-boew.github.io/wet-boew/Licence-fra.txt
 */
@import "compass/utilities/color";

$sans-serif:		Verdana, Arial, Helvetica, sans-serif;
$serif:				Georgia, "Times New Roman", Times, serif;

$margin-xsmall:		1px;
$margin-small:		2px;
$margin-medium:		10px;
$margin-large:		20px;
$margin-xlarge:		50px;

$spacing-xsmall:	1px;
$spacing-small:		5px;
$spacing-medium:	10px;
$spacing-large:		20px;
$spacing-xlarge:	50px;

$font-xxsmall:		50%;
$font-xsmall:		70%;
$font-small:		85%;
$font-medium:		100%;
$font-large:		120%;
$font-xlarge:		150%;
$font-xxlarge:		180%;

$font-weight-normal:	400;
$font-weight-bold:		700;

$highlight:		#ffffc9;
$accent:		#176ca7; //#176ca7; //#1a7abd; // #cc0000;
$black:			#000;
$dark:			#222;
$medium:		#666;
$light:			#eee;
$white:			#fff;
$silver:		#ccc;

$red: 			#d73d38;
$yellow:		#ffe75d;


$alert:			$red;
$attention:		$yellow;
$note:			#555;
$info:			#2a7da6;
$question:		#888;
$answer:		#6c9f42;
$tool:			#bab595;
$inprogress:	#6d92a5;
$refer:			#3f577c;
$summary:		#418541;
$archive:		#b93531;

$line-height:		18px;

// global
// used in: @border-radius
$default-border-radius:		4px;

// custom
// used in: @colorize
$default-color: #ccc;
$default-color-gradient: true;
$default-color-shadow: true;
$default-color-border: false;

$accent-1: #8d201c;
$accent-2: #EE8310;
$accent-3: #2a7da6;
$accent-4: #5a306b;
$accent-5: #285228;
$accent-6: #154055;
$accent-7: #555555;
$accent-8: #f6d200;
$accent-9: #d73d38;
$accent-10: #418541;
$accent-11: #87aec9;
$accent-12: #23447e;
$accent-13: #999999;

//override the compass zero values with unitless values
$default-box-shadow-h-offset: 0;
$default-box-shadow-v-offset: 0;

@mixin colorize-base($color: $default-color, $important: false) {

	// set default colors
	$text: contrast-color($color, $dark, $white, 75%);
	@if $important {
		background-color: $color !important;
	} @else {
		background-color: $color;
	}
	color: $text !important;

	// apply link colors to base only
	a {
		&, &.ui-link {
			&:link, &:visited {
				@if $important {
					color: $text !important;
				} @else {
					color: $text;
				}
			}
			@include pseudo-focus {
				@if $text == white {
					@if $important {
						color: darken($text, 10%) !important;
					} @else {
						color: darken($text, 10%);
					}
				} @else {
					@if $important {
						color: lighten($text, 20%) !important;
					} @else {
						color: lighten($text, 20%);
					}
				}
			}
		}
	}

}

@mixin colorize-border($color: $default-color, $border: "border") {

	@if $border == "border" {
		border: 1px solid darken($color, 10%);
	} @else if $border == "outline" {
		outline: 1px solid darken($color, 10%);
	}

}

@mixin colorize($color: $default-color, $gradient: $default-color-gradient, $shadow: $default-color-shadow, $border: $default-color-border, $important: false) {

	// used to set text shadow
	$text: contrast-color($color, $dark, $white, 75%);

	@if $border {
		@include colorize-border($color, $border)
	}

	// add text shadow
	@if $shadow == true {
		text-shadow: 0 1px 1px contrast-color($text, $dark, $white, 50%);
	}

	// add gradient
	@if $gradient == true {

		background-repeat: repeat-x;

		@if $important {
			@include background-image(linear-gradient($color, darken($color, 7%)) !important);
		} @else {
			@include background-image(linear-gradient($color, darken($color, 7%)));
		}
	}

}

//Based off of Bourbon, but inlined for specific use https://github.com/thoughtbot/bourbon/blob/master/app/assets/stylesheets/functions/_modular-scale.scss
@function golden-ratio($value, $increment) {
  @if $increment > 0 {
    @for $i from 1 through $increment {
      $value: ($value * 1.618);
    }
  } @else if $increment < 0 {
    $increment: abs($increment);
    @for $i from 1 through $increment {
      $value: ($value / 1.618);
    }
  }
  @return $value;
}

@mixin clip-rect($top: 1px, $right: 1px, $bottom: 1px, $left: 1px) {
	@if $legacy-support-for-ie {
		clip: rect($top $right $bottom $left);
	} @else {
		clip: rect($top, $right, $bottom, $left);
	}
}

//Used to work around an IE7 bug with focus
@mixin pseudo-focus($hover: true) {
    @if $legacy-support-for-ie7 {
        @if $hover {
            &:hover, &:focus, &:active {
                @content;
            }
        } @else {
            &:focus, &:active {
                @content;
            }
        }        
    } @else if $hover {
		&:hover, &:focus {
			@content;
		}
	} @else {
		&:focus {
			@content;
		}
    }
}
