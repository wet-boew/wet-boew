<?xml version="1.0" encoding="UTF-8"?>
<project name="maven-artifacts" default="buildArtifacts" basedir=".">
	<property file="maven-artifacts.properties" />
	<property environment="env" />
	<property name="artifacts.folder" value="${basedir}/../../../${dist.dir}" />
	<import file="${basedir}/../../../build/build-tasks.xml" />

	<target name="buildArtifacts">

		<!-- NOTE: Because of http://jira.codehaus.org/browse/MANTTASKS-201, we 
			have to specify fork=true on the mvn tasks below -->

		<!-- When running this on a developer's machine, they may have a copy of 
			Maven installed and pointed to a local repository such as Nexus, where the 
			necessary dependencies can be fetched from without hitting the net. So, if 
			'useMavenHome' is set to 'true', we'll use the Maven installation specified 
			by MAVEN_HOME. Otherwise, download and use whatever version of Maven is specified 
			in build.properties. -->
		<if>
			<isset property="useMavenHome" />
			<then>
				<echo level="info" message="Using MAVEN_HOME" />

				<!-- Clean out the target folder -->
				<mvn pom="pom.xml" mavenhome="${env.MAVEN_HOME}" failonerror="true"
					fork="true"
				>
					<arg value="-PwetAntBuild" />
					<arg value="-Dwet.ant.build.folder=${artifacts.folder}" />
					<arg value="clean:clean" />
				</mvn>

				<!-- Call Maven to create and deploy the artifacts -->
				<mvn pom="pom.xml" mavenhome="${env.MAVEN_HOME}" failonerror="true"
					fork="true"
				>
					<arg value="-PwetAntBuild" />
					<arg value="-Dwet.ant.build.folder=${artifacts.folder}" />
					<arg value="deploy" />
				</mvn>
			</then>
			<elseif>
				<isset property="maven.version" />
				<then>
					<echo level="info" message="Using Maven version ${maven.version}" />

					<!-- Clean out the target folder -->
					<mvn pom="pom.xml" mavenversion="${maven.version}" failonerror="true"
						fork="true"
					>
						<arg value="-PwetAntBuild" />
						<arg value="-Dwet.ant.build.folder=${artifacts.folder}" />
						<arg value="clean:clean" />
					</mvn>

					<!-- Call Maven to create and deploy the artifacts -->
					<mvn pom="pom.xml" mavenversion="${maven.version}" failonerror="true"
						fork="true"
					>
						<arg value="-PwetAntBuild" />
						<arg value="-Dwet.ant.build.folder=${artifacts.folder}" />
						<arg value="deploy" />
					</mvn>
				</then>
			</elseif>
			<else>
				<fail message="Couldn't find Maven." />
			</else>
		</if>
	</target>

	<!-- <target name="deploy" depends="dist" description="deploy snapshot version 
		to Maven snapshot repository"> <mvn> <arg value="org.apache.maven.plugins:maven-deploy-plugin:deploy-file" 
		/> <arg value="-DpomFile=pom.xml" /> <arg value="-Dfile=${artifacts.folder}/${maven-jar}" 
		/> </mvn> </target> -->
	<!-- <artifact:deploy file="${src.dir}/maven/wet-parent/my-project-1.0.jar"> 
		<remoteRepository url="file:///www/repository"/> <pom refid="mypom"/> </artifact:deploy> -->
	<!-- before this, update project version (both build.xml and pom.xml) from 
		SNAPSHOT to RELEASE -->
	<!-- <target name="stage" depends="dist" description="deploy release version 
		to Maven staging repository"> sign and deploy the main artifact <artifact:mvn> 
		<arg value="org.apache.maven.plugins:maven-gpg-plugin:1.3:sign-and-deploy-file" 
		/> <arg value="-Durl=${maven-staging-repository-url}" /> <arg value="-DrepositoryId=${maven-staging-repository-id}" 
		/> <arg value="-DpomFile=pom.xml" /> <arg value="-Dfile=${maven-jar}" /> 
		<arg value="-Pgpg" /> </artifact:mvn> </target> -->
</project>
